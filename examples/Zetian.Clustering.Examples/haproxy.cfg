# HAProxy Configuration for Zetian SMTP Cluster
global
    log stdout local0
    maxconn 4096
    daemon
    
    # Enable stats
    stats socket /var/run/haproxy.stats mode 600 level admin
    stats timeout 2m

defaults
    log     global
    mode    tcp
    option  tcplog
    option  dontlognull
    option  redispatch
    
    retries 3
    timeout connect 5s
    timeout client  300s
    timeout server  300s
    
    # Enable health checks
    option tcp-check

# Statistics page
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats show-node
    stats show-legends
    stats show-desc Zetian SMTP Cluster Load Balancer

# SMTP Frontend
frontend smtp_frontend
    bind *:25
    mode tcp
    
    # Log client connections
    log-tag smtp
    
    # Set max connections
    maxconn 1000
    
    # Client timeout
    timeout client 300s
    
    # ACL for rate limiting (optional)
    # stick-table type ip size 100k expire 30s store conn_cur
    # tcp-request connection reject if { src_conn_cur ge 10 }
    
    default_backend smtp_cluster

# SMTP Backend Cluster
backend smtp_cluster
    mode tcp
    
    # Load balancing algorithm
    balance leastconn
    
    # Session persistence based on source IP
    stick-table type ip size 100k expire 30m
    stick on src
    
    # Health check configuration
    option tcp-check
    tcp-check connect
    tcp-check send "EHLO haproxy\r\n"
    tcp-check expect rstring ^220.*
    tcp-check send "QUIT\r\n"
    tcp-check expect rstring ^221.*
    
    # Server configuration with health checks
    server node1 smtp-node-1:25 check inter 10s fall 3 rise 2 maxconn 100
    server node2 smtp-node-2:25 check inter 10s fall 3 rise 2 maxconn 100
    server node3 smtp-node-3:25 check inter 10s fall 3 rise 2 maxconn 100
    
    # Backup server (optional)
    # server backup smtp-backup:25 backup check inter 10s fall 3 rise 2

# Alternative: Round-robin backend
backend smtp_cluster_roundrobin
    mode tcp
    balance roundrobin
    
    option tcp-check
    tcp-check connect
    tcp-check send "EHLO haproxy\r\n"
    tcp-check expect rstring ^220.*
    
    server node1 smtp-node-1:25 check weight 100
    server node2 smtp-node-2:25 check weight 100
    server node3 smtp-node-3:25 check weight 100

# Alternative: Source IP hash backend (for session affinity)
backend smtp_cluster_source
    mode tcp
    balance source
    hash-type consistent
    
    option tcp-check
    tcp-check connect
    tcp-check send "EHLO haproxy\r\n"
    tcp-check expect rstring ^220.*
    
    server node1 smtp-node-1:25 check
    server node2 smtp-node-2:25 check
    server node3 smtp-node-3:25 check